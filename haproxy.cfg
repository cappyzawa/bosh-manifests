global
	log /dev/log	local0
	log /dev/log	local1 notice
	chroot /var/lib/haproxy
	stats socket /run/haproxy/admin.sock mode 660 level admin
	stats timeout 30s
	user haproxy
	group haproxy
	daemon

	# Default SSL material locations
	ca-base /etc/ssl/certs
	crt-base /etc/ssl/private

	# Default ciphers to use on SSL-enabled listening sockets.
	# For more information, see ciphers(1SSL). This list is from:
	#  https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
	ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS
	ssl-default-bind-options no-sslv3

defaults
	log	global
	option	dontlognull
        timeout connect 5000
        timeout client  50000
        timeout server  50000
	errorfile 400 /etc/haproxy/errors/400.http
	errorfile 403 /etc/haproxy/errors/403.http
	errorfile 408 /etc/haproxy/errors/408.http
	errorfile 500 /etc/haproxy/errors/500.http
	errorfile 502 /etc/haproxy/errors/502.http
	errorfile 503 /etc/haproxy/errors/503.http
	errorfile 504 /etc/haproxy/errors/504.http

frontend https_frontend
	bind *:443 ssl crt /etc/haproxy/server.pem
        mode    http
        option  httplog
	reqadd X-Forwarded-Proto:\ https
	# Concourse
        acl host_concourse_sslip hdr(host) concourse-192-168-11-210.sslip.io
	acl host_concourse_ikam hdr(host) concourse.ik.am
	use_backend concourse_backend if host_concourse_sslip
	use_backend concourse_backend if host_concourse_ikam
	# Nexus (Maven)
        acl host_nexus_sslip hdr(host) nexus-192-168-11-210.sslip.io
        acl host_nexus_ikam hdr(host) nexus.ik.am
	use_backend nexus_backend if host_nexus_sslip
	use_backend nexus_backend if host_nexus_ikam
	# Nexus (Docker Registry)
        acl host_docker_sslip hdr(host) docker-192-168-11-210.sslip.io
        acl host_docker_ikam hdr(host) docker.ik.am
        use_backend docker_backend if host_docker_sslip
        use_backend docker_backend if host_docker_ikam
        # Nexus (Docker Private Registry)
        acl host_registry_sslip hdr(host) registry-192-168-11-210.sslip.io
        acl host_registry_ikam hdr(host) registry.ik.am
        use_backend registry_backend if host_registry_sslip
        use_backend registry_backend if host_registry_ikam
	# Kafka Manager
        acl host_kafka_manager_ikam hdr(host) kafka-manager.ik.am
        use_backend kafka_manager_backend if host_kafka_manager_ikam
	# GFSH
        acl host_gfsh_sslip hdr(host) gfsh-192-168-11-210.sslip.io
	# acl host_gfsh_ikam hdr(host) gfsh.ik.am
	use_backend gfsh_backend if host_gfsh_sslip
	# use_backend gfsh_backend if host_gfsh_ikam

backend concourse_backend
	mode http
	balance roundrobin
	server concourse 10.244.0.200:80
backend nexus_backend
        mode http
	balance roundrobin
	server nexus 10.244.0.205:8081
backend docker_backend
        mode http
        balance roundrobin
        server nexus 10.244.0.205:18080
backend registry_backend
        mode http
        balance roundrobin
        server nexus 10.244.0.205:28080
backend kafka_manager_backend
	mode http
	balance roundrobin
	server kafka_manager 10.244.0.140:9095
backend gfsh_backend
        mode http
        balance roundrobin
	server gfsh 10.244.0.150:7070

frontend kafka0_frontend
	bind *:9092
        mode tcp
        option  tcplog
	default_backend kafka0_backend
frontend kafka1_frontend
        bind *:19092
        mode tcp
        option  tcplog
        default_backend kafka1_backend
frontend kafka2_frontend
        bind *:29092
        mode tcp
        option  tcplog
        default_backend kafka2_backend
backend kafka0_backend
        mode tcp
        balance roundrobin
        server kafka0 10.244.0.130:9092
backend kafka1_backend
        mode tcp
        balance roundrobin
        server kafka1 10.244.0.131:9092
backend kafka2_backend
        mode tcp
        balance roundrobin
        server kafka2 10.244.0.132:9092

frontend zookeeper0_frontend
        bind *:2181
        mode tcp
        option  tcplog
        default_backend zookeeper0_backend
frontend zookeeper1_frontend
        bind *:12181
        mode tcp
        option  tcplog
        default_backend zookeeper1_backend
frontend zookeeper2_frontend
        bind *:22181
        mode tcp
        option  tcplog
        default_backend zookeeper2_backend
backend zookeeper0_backend
        mode tcp
        balance roundrobin
        server zookeeper0 10.244.0.120:2181
backend zookeeper1_backend
        mode tcp
        balance roundrobin
        server zookeeper1 10.244.0.121:2181
backend zookeeper2_backend
        mode tcp
        balance roundrobin
        server zookeeper2 10.244.0.122:2181
